{"version":3,"file":"vanilla-click-outside.umd.js","sources":["../src/index.ts","../src/utils.ts"],"sourcesContent":["import { isNodeList, isHTMLCollection, isHTMLElement } from './utils'\r\n\r\nexport type Selector = HTMLElement | HTMLCollection | NodeList\r\nexport type Options = {\r\n  removeListener: boolean\r\n}\r\nexport type Callback = (state: boolean | null, event: Event) => {}\r\n\r\nconst defaultOptions: Options = {\r\n  removeListener: true,\r\n}\r\n\r\nfunction vanillaClickOutside(\r\n  selector: Selector,\r\n  callback: Callback,\r\n  options?: Options\r\n): EventListener {\r\n  const theOptions = { ...defaultOptions, ...options }\r\n\r\n  const listener = (event: Event) => {\r\n    if (isNodeList(selector) || isHTMLCollection(selector)) {\r\n      if (\r\n        Array.from(<HTMLCollection | NodeList>selector).some((selection) =>\r\n          selection.contains(<Node>event.target)\r\n        )\r\n      ) {\r\n        return callback(false, event)\r\n      }\r\n    } else if (isHTMLElement(selector)) {\r\n      if ((selector as HTMLElement).contains(<Node>event.target)) {\r\n        return callback(false, event)\r\n      }\r\n    } else {\r\n      console.warn('Undefined type of', selector)\r\n      return callback(null, event)\r\n    }\r\n\r\n    if (theOptions.removeListener) {\r\n      document.removeEventListener('click', listener)\r\n    }\r\n\r\n    return callback(true, event)\r\n  }\r\n\r\n  document.addEventListener('click', listener)\r\n\r\n  return listener\r\n}\r\n\r\nexport default vanillaClickOutside\r\n","export function isNodeList(target: any): boolean {\r\n  return NodeList.prototype.isPrototypeOf(target)\r\n}\r\n\r\nexport function isHTMLCollection(target: any): boolean {\r\n  return HTMLCollection.prototype.isPrototypeOf(target)\r\n}\r\n\r\nexport function isHTMLElement(target: any): boolean {\r\n  return HTMLElement.prototype.isPrototypeOf(target)\r\n}\r\n\r\nexport function isElement(target: any): boolean {\r\n  return Element.prototype.isPrototypeOf(target)\r\n}\r\n"],"names":["const","defaultOptions","removeListener","selector","callback","options","theOptions","Object","listener","event","NodeList","prototype","isPrototypeOf","HTMLCollection","Array","from","some","selection","contains","target","HTMLElement","console","warn","document","removeEventListener","addEventListener"],"mappings":"kLAQAA,IAAMC,EAA0B,CAC9BC,gBAAgB,UAGlB,SACEC,EACAC,EACAC,OAEMC,EAAaC,iBAAKN,KAElBO,WAAYC,MClBXC,SAASC,UAAUC,cDmBTT,ICfVU,eAAeF,UAAUC,cDeeT,OAEzCW,MAAMC,KAAgCZ,GAAUa,cAAMC,UACpDA,EAAUC,SAAeT,EAAMU,iBAG1Bf,GAAS,EAAOK,OAEpB,CAAA,ICnBFW,YAAYT,UAAUC,cDmBFT,UAKvBkB,QAAQC,KAAK,oBAAqBnB,GAC3BC,EAAS,KAAMK,MALjBN,EAAyBe,SAAeT,EAAMU,eAC1Cf,GAAS,EAAOK,UAOvBH,EAAWJ,gBACbqB,SAASC,oBAAoB,QAAShB,GAGjCJ,GAAS,EAAMK,WAGxBc,SAASE,iBAAiB,QAASjB,GAE5BA"}